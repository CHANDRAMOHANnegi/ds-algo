package geeksForGeeks;

/*package whatever //do not write package name here */
import java.io.*;
import java.util.*;

public class Solution {

	static public ArrayList<Integer> removeduplicates(int[] arr) {
		ArrayList<Integer> list = new ArrayList<Integer>();
		for (int i = 0; i < arr.length; i++) {
			if (i < arr.length - 1 && arr[i] == arr[i + 1]) {
			} else {
				list.add(arr[i]);
			}
		}
		return list;
	}
	
	
	static int[] climbingLeaderboard(int[] score, int[] alice) {
 
		       ArrayList<Integer> list=removeduplicates(score);
				Integer[] scores = list.toArray(new Integer[list.size()]);  
		 
 
		int[] result = new int[alice.length];
		int i = 0;
		while (i < alice.length) {
			for (int j = 0; j < (scores.length); j++) {
				if (scores[j] <= alice[i]) {
					result[i] = j;
					break;
				} else {
					
					if (j == scores.length) {
						result[i] = j;
						break;
					}
				}
				result[i] = j;
			}
			i++;
		}
		return result;
	}
	
	public int binarySearch(int arr[],int start, int end,int n) {
		
		int mid=(arr.length/2)+1;
		if(arr[mid]==n) {
			return  mid;
		}else {
			if(arr[mid]>n) {
				binarySearch(arr, n);
			}
		}
		
//		
//		for(int i=0;i<arr.length;i++) {
//			if()
//		}
//		
		
		return 0;
	}
	

	private static final Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) throws IOException {

		int[] scores = { 100, 100, 50, 40, 40, 20, 10 };
		int[] alice = new int[] { 5, 25, 50, 120 };

		int[] result = climbingLeaderboard(scores, alice);

		for (int i = 0; i < result.length; i++) {

			System.out.println(result[i]);
		}

		scanner.close();
	}
}
